{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport function resolve(styleProp, cleanedProps) {\n  if (styleProp) {\n    return StyleSheet ? [styleProp, cleanedProps] : styleProp[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] ? Object.assign.apply(Object, [{}].concat(_toConsumableArray(styleProp), [cleanedProps])) : _extends({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n}","map":{"version":3,"names":["StyleSheet","resolve","styleProp","cleanedProps","Symbol","iterator","Object","assign","apply","concat","_toConsumableArray","_extends"],"sources":["/Users/lx1023696171/Documents/0_DTU_study/4-Advanced Project in Digital Media engineering/Implement/PlantPal/node_modules/react-native-svg/lib/module/lib/resolve.ts"],"sourcesContent":["import { StyleSheet } from 'react-native-web';\n\n// Kept in separate file, to avoid name collision with Symbol element\nexport function resolve(styleProp, cleanedProps) {\n  if (styleProp) {\n    return StyleSheet\n      ? [styleProp, cleanedProps]\n      : // Compatibility for arrays of styles in plain react web\n      styleProp[Symbol.iterator]\n      ? Object.assign({}, ...styleProp, cleanedProps)\n      : Object.assign({}, styleProp, cleanedProps);\n  } else {\n    return cleanedProps;\n  }\n}\n"],"mappings":";;AAAA,OAAAA,UAAA;AAGA,OAAO,SAASC,OAATA,CAAiBC,SAAjB,EAA4BC,YAA5B,EAA0C;EAC/C,IAAID,SAAJ,EAAe;IACb,OAAOF,UAAU,GACb,CAACE,SAAD,EAAYC,YAAZ,CADa,GAGfD,SAAS,QAAAE,MAAA,kBAACA,MAAM,CAACC,QAAR,gBAAT,GACEC,MAAM,CAACC,MAAP,CAAAC,KAAA,CAAAF,MAAM,GAAQ,EAAR,EAAAG,MAAA,CAAAC,kBAAA,CAAeR,SAAf,IAA0BC,YAA1B,GADR,GAEEQ,QAAA,CAAc,EAAd,EAAkBT,SAAlB,EAA6BC,YAA7B,CALJ;EAMD,CAPD,MAOO;IACL,OAAOA,YAAP;EACD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}